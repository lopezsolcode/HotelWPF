<Application x:Class="HotelManagementSystem.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:HotelManagementSystem"
            xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
            xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
            xmlns:internal="clr-namespace:MaterialDesignThemes.Wpf.Internal;assembly=MaterialDesignThemes.Wpf"
            xmlns:behaviors="clr-namespace:MaterialDesignThemes.Wpf.Behaviors;assembly=MaterialDesignThemes.Wpf"
            xmlns:myConverters="clr-namespace:HotelManagementSystem.Converters">
    <Application.Resources>
        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="DeepPurple" SecondaryColor="Lime" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign2.Defaults.xaml" />

            </ResourceDictionary.MergedDictionaries>


            <Style x:Key="btnLateral" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#d0c0ff"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="7">
                                <ContentPresenter x:Name="contentPresenter"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#d0c0ff"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
                <Setter Property="BorderBrush" Value="{Binding HorizontalGridLinesBrush, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                <Setter Property="BorderThickness" Value="{Binding GridLinesVisibility, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                <Polygon x:Name="Arrow" Fill="{DynamicResource MaterialDesign.Brush.Foreground}" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.5" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource MaterialDesign.Brush.DataGrid.RowHoverBackground}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource MaterialDesign.Brush.DataGrid.ButtonPressed}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#222528"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="Margin" Value="0 10 0 0"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="SelectionUnit" Value="FullRow"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="CanUserResizeRows" Value="False"/>
                <Setter Property="CanUserReorderColumns" Value="False"/>
                <Setter Property="ColumnWidth" Value="*"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="GridLinesVisibility" Value="None"/>

                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>


            <!-- Estilo para encabezado de columna -->
            <Style x:Key="DataGridColumnHeaderStyle1" TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#69717d"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Padding" Value="8 4"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <!-- Estilo para filas -->
            <Style x:Key="DataGridRowStyle1" TargetType="DataGridRow">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Margin" Value="0 4 0 0"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.DataGrid.Selected}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.DataGrid.RowHoverBackground}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Estilo para celdas -->
            <Style x:Key="DataGridCellStyle1" TargetType="DataGridCell">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="8,0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            </Style>
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Grid>
                    <Path x:Name="Arrow"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              Data="M 0 0 L 4 4 L 8 0 Z"
              Fill="Gray"
              Width="10"
              Height="6" />
                </Grid>
            </ControlTemplate>

        </ResourceDictionary>


    </Application.Resources>
    
</Application>